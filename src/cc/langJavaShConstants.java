/* Generated By:JavaCC: Do not edit this line. langJavaShConstants.java */
package cc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface langJavaShConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PLUS = 5;
  /** RegularExpression Id. */
  int INCREMENT = 6;
  /** RegularExpression Id. */
  int DECREMENT = 7;
  /** RegularExpression Id. */
  int MINUS = 8;
  /** RegularExpression Id. */
  int MULTIPLY = 9;
  /** RegularExpression Id. */
  int DIVIDE = 10;
  /** RegularExpression Id. */
  int MATH = 11;
  /** RegularExpression Id. */
  int And = 12;
  /** RegularExpression Id. */
  int Or = 13;
  /** RegularExpression Id. */
  int LogicalDigital = 14;
  /** RegularExpression Id. */
  int Equal = 15;
  /** RegularExpression Id. */
  int Diferent = 16;
  /** RegularExpression Id. */
  int Atribute = 17;
  /** RegularExpression Id. */
  int Above = 18;
  /** RegularExpression Id. */
  int AboveEqual = 19;
  /** RegularExpression Id. */
  int Lower = 20;
  /** RegularExpression Id. */
  int LowerEqual = 21;
  /** RegularExpression Id. */
  int LogicalMathOperator = 22;
  /** RegularExpression Id. */
  int CONSTANT = 23;
  /** RegularExpression Id. */
  int LOGICALCONSTANT = 24;
  /** RegularExpression Id. */
  int DIGIT = 25;
  /** RegularExpression Id. */
  int CHAR = 26;
  /** RegularExpression Id. */
  int Int = 27;
  /** RegularExpression Id. */
  int Float = 28;
  /** RegularExpression Id. */
  int String = 29;
  /** RegularExpression Id. */
  int Bool = 30;
  /** RegularExpression Id. */
  int Type = 31;
  /** RegularExpression Id. */
  int Constructor = 32;
  /** RegularExpression Id. */
  int IdentVar = 33;
  /** RegularExpression Id. */
  int IdentClass = 34;
  /** RegularExpression Id. */
  int While = 35;
  /** RegularExpression Id. */
  int If = 36;
  /** RegularExpression Id. */
  int Else = 37;
  /** RegularExpression Id. */
  int For = 38;
  /** RegularExpression Id. */
  int Do = 39;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"+\"",
    "\"++\"",
    "\"--\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "<MATH>",
    "\"&&\"",
    "\"||\"",
    "<LogicalDigital>",
    "\"==\"",
    "\"!=\"",
    "\"=\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "<LogicalMathOperator>",
    "<CONSTANT>",
    "<LOGICALCONSTANT>",
    "<DIGIT>",
    "<CHAR>",
    "\"int\"",
    "\"float\"",
    "\"string\"",
    "\"bool\"",
    "<Type>",
    "<Constructor>",
    "<IdentVar>",
    "<IdentClass>",
    "\"while\"",
    "\"if\"",
    "\"else\"",
    "\"for\"",
    "\"do\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\" { \"",
    "\"){\"",
    "\" }\"",
    "\") { \"",
  };

}
